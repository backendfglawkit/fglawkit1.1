from phonepe.sdk.pg.payments.models.request_v1.expiry import Expiry
from phonepe.sdk.pg.payments.models.request_v1.net_banking_payment_instrument import NetBankingPaymentInstrument
from phonepe.sdk.pg.payments.models.request_v1.pay_page_pay_instrument import PayPagePaymentInstrument
from phonepe.sdk.pg.payments.models.request_v1.pg_device_context import PgDeviceContext
from phonepe.sdk.pg.payments.models.request_v1.pg_pay_request import PgPayRequest
from phonepe.sdk.pg.payments.models.request_v1.token_details import TokenDetails
from phonepe.sdk.pg.payments.models.request_v1.token_payment_instrument import TokenPaymentInstrument
from phonepe.sdk.pg.payments.models.request_v1.upi_qr_payment_instrument import UpiQrPaymentInstrument
from phonepe.sdk.pg.payments.payment_instrument_factory import PaymentInstrumentBuilder


class PgPayRequestBuilder:

    @staticmethod
    def build_upi_collect_pay_request(merchant_transaction_id: str, amount: int,
                                      vpa: str, merchant_user_id: str = None, callback_url: str = None,
                                      merchant_order_id: str = None, device_os: str = None,
                                      redirect_url: str = None,
                                      redirect_mode: str = None, cancel_redirect_url: str = None,
                                      auto_failure_timeout: int = None, callback_mode: str = None) -> PgPayRequest:
        upi_collect_instrument = PaymentInstrumentBuilder.build_upi_collect_payment_instrument(vpa=vpa)
        return PgPayRequest(merchant_transaction_id=merchant_transaction_id,
                            amount=amount,
                            merchant_order_id=merchant_order_id,
                            payment_instrument=upi_collect_instrument,
                            merchant_user_id=merchant_user_id,
                            device_context=PgDeviceContext(deviceOS=device_os),
                            redirect_url=redirect_url,
                            redirect_mode=redirect_mode,
                            callback_url=callback_url,
                            cancel_redirect_url=cancel_redirect_url,
                            auto_failure_timeout=auto_failure_timeout,
                            callback_mode=callback_mode)

    @staticmethod
    def build_upi_intent_payment_instrument(merchant_transaction_id: str, amount: int,
                                            target_app: str, merchant_user_id: str = None, callback_url: str = None,
                                            merchant_order_id: str = None, device_os: str = None,
                                            redirect_url: str = None,
                                            redirect_mode: str = None, cancel_redirect_url: str = None,
                                            auto_failure_timeout: int = None,
                                            callback_mode: str = None) -> PgPayRequest:
        upi_intent_instrument = PaymentInstrumentBuilder.build_upi_intent_payment_instrument(
            target_app=target_app)
        return PgPayRequest(merchant_transaction_id=merchant_transaction_id,
                            amount=amount,
                            merchant_order_id=merchant_order_id,
                            payment_instrument=upi_intent_instrument,
                            merchant_user_id=merchant_user_id,
                            device_context=PgDeviceContext(deviceOS=device_os),
                            redirect_url=redirect_url,
                            redirect_mode=redirect_mode,
                            callback_url=callback_url,
                            cancel_redirect_url=cancel_redirect_url,
                            auto_failure_timeout=auto_failure_timeout,
                            callback_mode=callback_mode)

    @staticmethod
    def build_upi_qr_payment_instrument(merchant_transaction_id: str, amount: int, merchant_user_id: str,
                                        callback_url: str = None,
                                        merchant_order_id: str = None, device_os: str = None,
                                        redirect_url: str = None,
                                        redirect_mode: str = None, cancel_redirect_url: str = None,
                                        auto_failure_timeout: int = None, callback_mode: str = None) -> PgPayRequest:
        upi_qr_instrument = UpiQrPaymentInstrument()
        return PgPayRequest(merchant_transaction_id=merchant_transaction_id,
                            amount=amount,
                            merchant_order_id=merchant_order_id,
                            payment_instrument=upi_qr_instrument,
                            merchant_user_id=merchant_user_id,
                            device_context=PgDeviceContext(deviceOS=device_os),
                            redirect_url=redirect_url,
                            redirect_mode=redirect_mode,
                            callback_url=callback_url,
                            cancel_redirect_url=cancel_redirect_url,
                            auto_failure_timeout=auto_failure_timeout,
                            callback_mode=callback_mode)

    @staticmethod
    def build_saved_card_payment_instrument(merchant_transaction_id: str, amount: int,
                                            auth_mode: str, card_id: str, encrypted_cvv: str,
                                            encryption_key_id: int,
                                            merchant_user_id: str = None, callback_url: str = None,
                                            merchant_order_id: str = None, device_os: str = None,
                                            redirect_url: str = None,
                                            redirect_mode: str = None, cancel_redirect_url: str = None,
                                            auto_failure_timeout: int = None, callback_mode: str = None
                                            ) -> PgPayRequest:
        saved_card_instrument = PaymentInstrumentBuilder.build_saved_card_payment_instrument(
            auth_mode=auth_mode, card_id=card_id, encrypted_cvv=encrypted_cvv, encryption_key_id=encryption_key_id)
        return PgPayRequest(merchant_transaction_id=merchant_transaction_id,
                            amount=amount,
                            merchant_order_id=merchant_order_id,
                            payment_instrument=saved_card_instrument,
                            merchant_user_id=merchant_user_id,
                            device_context=PgDeviceContext(deviceOS=device_os),
                            redirect_url=redirect_url,
                            redirect_mode=redirect_mode,
                            callback_url=callback_url,
                            cancel_redirect_url=cancel_redirect_url,
                            auto_failure_timeout=auto_failure_timeout,
                            callback_mode=callback_mode)

    @staticmethod
    def build_card_pay_request(merchant_transaction_id: str, amount: int, auth_mode: str, save_card: bool,
                               encrypted_card_number: str, encryption_key_id: int, card_holder_name: str,
                               expiry_month: str, expiry_year: str, encrypted_cvv: str, merchant_user_id: str = None,
                               redirect_url: str = None, redirect_mode: str = None, callback_url: str = None,
                               device_os: str = None, merchant_order_id: str = None, cancel_redirect_url: str = None,
                               auto_failure_timeout: int = None, address_line1: str = None, address_line2: str = None,
                               address_city: str = None, address_state: str = None, address_zip: str = None,
                               address_country: str = None, callback_mode: str = None) -> PgPayRequest:
        card_payment_instrument = PaymentInstrumentBuilder.build_card_payment_instrument(auth_mode=auth_mode,
                                                                                         save_card=save_card,
                                                                                         encrypted_card_number=encrypted_card_number,
                                                                                         encryption_key_id=encryption_key_id,
                                                                                         card_holder_name=card_holder_name,
                                                                                         expiry_month=expiry_month,
                                                                                         expiry_year=expiry_year,
                                                                                         encrypted_cvv=encrypted_cvv,
                                                                                         address_line1=address_line1,
                                                                                         address_line2=address_line2,
                                                                                         address_city=address_city,
                                                                                         address_state=address_state,
                                                                                         address_country=address_country,
                                                                                         address_zip=address_zip)

        return PgPayRequest(merchant_transaction_id=merchant_transaction_id,
                            amount=amount,
                            merchant_order_id=merchant_order_id,
                            payment_instrument=card_payment_instrument,
                            merchant_user_id=merchant_user_id,
                            device_context=PgDeviceContext(deviceOS=device_os),
                            redirect_url=redirect_url,
                            redirect_mode=redirect_mode,
                            callback_url=callback_url,
                            cancel_redirect_url=cancel_redirect_url,
                            auto_failure_timeout=auto_failure_timeout,
                            callback_mode=callback_mode)

    @staticmethod
    def build_token_payment_instrument(merchant_transaction_id: str, amount: int,
                                       auth_mode: str, encrypted_cvv: str, cryptogram: str, encrypted_token: str,
                                       encryption_key_id: int, expiry_month: str, expiry_year: str, pan_suffix: str,
                                       card_holder_name: str,
                                       merchant_user_id: str = None,
                                       redirect_url: str = None, redirect_mode: str = None, callback_url: str = None,
                                       device_os: str = None, merchant_order_id: str = None,
                                       cancel_redirect_url: str = None,
                                       auto_failure_timeout: int = None, callback_mode: str = None
                                       ) -> PgPayRequest:
        token_details = TokenDetails(encrypted_token=encrypted_token, encryption_key_id=encryption_key_id,
                                     expiry=Expiry(expiry_month, expiry_year), pan_suffix=pan_suffix,
                                     cryptogram=cryptogram, encrypted_cvv=encrypted_cvv,
                                     card_holder_name=card_holder_name)
        token_payment_instrument = TokenPaymentInstrument(auth_mode=auth_mode, token_details=token_details)

        return PgPayRequest(merchant_transaction_id=merchant_transaction_id,
                            amount=amount,
                            merchant_order_id=merchant_order_id,
                            payment_instrument=token_payment_instrument,
                            merchant_user_id=merchant_user_id,
                            device_context=PgDeviceContext(deviceOS=device_os),
                            redirect_url=redirect_url,
                            redirect_mode=redirect_mode,
                            callback_url=callback_url,
                            cancel_redirect_url=cancel_redirect_url,
                            auto_failure_timeout=auto_failure_timeout,
                            callback_mode=callback_mode)

    @staticmethod
    def build_pay_page_payment_instrument(merchant_transaction_id: str, amount: int,
                                          merchant_user_id: str = None,
                                          redirect_url: str = None, redirect_mode: str = None, callback_url: str = None,
                                          device_os: str = None, merchant_order_id: str = None,
                                          cancel_redirect_url: str = None,
                                          auto_failure_timeout: int = None, callback_mode: str = None
                                          ) -> PgPayRequest:
        return PgPayRequest(merchant_transaction_id=merchant_transaction_id,
                            amount=amount,
                            merchant_order_id=merchant_order_id,
                            payment_instrument=PayPagePaymentInstrument(),
                            merchant_user_id=merchant_user_id,
                            device_context=PgDeviceContext(deviceOS=device_os),
                            redirect_url=redirect_url,
                            redirect_mode=redirect_mode,
                            callback_url=callback_url,
                            cancel_redirect_url=cancel_redirect_url,
                            auto_failure_timeout=auto_failure_timeout,
                            callback_mode=callback_mode)

    @staticmethod
    def build_net_banking_payment_instrument(merchant_transaction_id: str, amount: int, bank_id: str,
                                             merchant_user_id: str = None,
                                             redirect_url: str = None, redirect_mode: str = None,
                                             callback_url: str = None,
                                             device_os: str = None, merchant_order_id: str = None,
                                             cancel_redirect_url: str = None,
                                             auto_failure_timeout: int = None, callback_mode: str = None
                                             ) -> PgPayRequest:
        return PgPayRequest(merchant_transaction_id=merchant_transaction_id,
                            amount=amount,
                            merchant_order_id=merchant_order_id,
                            payment_instrument=NetBankingPaymentInstrument(bank_id=bank_id),
                            merchant_user_id=merchant_user_id,
                            device_context=PgDeviceContext(deviceOS=device_os),
                            redirect_url=redirect_url,
                            redirect_mode=redirect_mode,
                            callback_url=callback_url,
                            cancel_redirect_url=cancel_redirect_url,
                            auto_failure_timeout=auto_failure_timeout,
                            callback_mode=callback_mode)
