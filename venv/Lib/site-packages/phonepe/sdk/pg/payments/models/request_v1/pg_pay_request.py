from dataclasses import dataclass, field

from dataclasses_json import dataclass_json, LetterCase

from phonepe.sdk.pg.payments.models.request_v1.payment_instrument import PaymentInstrument
from phonepe.sdk.pg.payments.models.request_v1.pg_device_context import PgDeviceContext

from phonepe.sdk.pg.payments.payment_instrument_factory import PaymentInstrumentBuilder


@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class PgPayRequest:
    merchant_transaction_id: str
    amount: int
    payment_instrument: PaymentInstrument
    merchant_id: str = field(default=None)  # note: this is compulsory field set in client, None for builder
    merchant_order_id: str = field(default=None)
    merchant_user_id: str = field(default=None)
    cancel_redirect_url: str = field(default=None)
    redirect_url: str = field(default=None)
    redirect_mode: str = field(default=None)
    callback_url: str = field(default=None)
    callback_mode: str = field(default=None)
    device_context: PgDeviceContext = field(default=None)
    auto_failure_timeout: int = field(default=None)

    @staticmethod
    def upi_collect_pay_request_builder(merchant_transaction_id: str, amount: int,
                                        vpa: str, merchant_user_id: str = None, redirect_url: str = None,
                                        redirect_mode: str = None, callback_url: str = None, callback_mode: str = None,
                                        merchant_order_id: str = None, cancel_redirect_url: str = None,
                                        device_os: str = None, auto_failure_timeout: int = None):
        """
        Builds a UPI Collect Pay request.

        Parameters:
            merchant_transaction_id (str): The unique transaction ID assigned by the merchant.
            amount (int): The amount of the payment. In paise, minimum 100 (1 rupee).
            vpa (str): The Virtual Payment Address (VPA) of the recipient.
            merchant_user_id (str, optional): The ID assigned to the user by the merchant.
            redirect_url (str, optional): The UI URL to redirect the user after a successful payment.
            redirect_mode (str, optional): The mode of redirection after payment completion.
            callback_url (str, optional): The S2S callback URL to which status notifications will be sent.
            callback_mode (str, optional): The mode of callback handling.
            merchant_order_id (str, optional): The ID of the order assigned by the merchant.
            cancel_redirect_url (str, optional): The UI URL to redirect the user if the payment is canceled.
            device_os (str, optional): The operating system of the device used for the payment (e.g., ANDROID or IOS).
            auto_failure_timeout (int, optional): The timeout period for automatic failure handling.

        Returns:
            PgPayRequest: The UPI Collect Pay request object.
        """

        payment_instrument = PaymentInstrumentBuilder.build_upi_collect_payment_instrument(vpa=vpa)
        return PgPayRequest(merchant_transaction_id=merchant_transaction_id,
                            amount=amount,
                            merchant_order_id=merchant_order_id,
                            payment_instrument=payment_instrument,
                            merchant_user_id=merchant_user_id,
                            device_context=PgDeviceContext(deviceOS=device_os),
                            redirect_url=redirect_url,
                            redirect_mode=redirect_mode,
                            callback_url=callback_url,
                            cancel_redirect_url=cancel_redirect_url,
                            auto_failure_timeout=auto_failure_timeout,
                            callback_mode=callback_mode)

    @staticmethod
    def upi_intent_pay_request_builder(merchant_transaction_id: str, amount: int,
                                       target_app: str, merchant_user_id: str = None, redirect_url: str = None,
                                       redirect_mode: str = None, callback_url: str = None, callback_mode: str = None,
                                       merchant_order_id: str = None, cancel_redirect_url: str = None,
                                       device_os: str = None, auto_failure_timeout: int = None):
        """
        Builds a UPI Intent Pay request.

        Parameters:
            merchant_transaction_id (str): The unique transaction ID assigned by the merchant.
            amount (int): The amount of the payment. In paise, minimum 100 (1 rupee).
            target_app (str): The app/package name of the target UPI app.
            merchant_user_id (str): The ID assigned to the user by the merchant.
            redirect_url (str): The UI URL to redirect the user after a successful payment.
            redirect_mode (str): The mode of redirection after payment completion.
            callback_url (str): The S2S callback URL to which status notifications will be sent.
            callback_mode (str): The mode of callback handling.
            merchant_order_id (str): The ID of the order assigned by the merchant.
            cancel_redirect_url (str): The UI URL to redirect the user if the payment is canceled.
            device_os (str): The operating system of the device used for the payment (e.g., ANDROID or IOS).
            auto_failure_timeout (int): The timeout period for automatic failure handling.

        Returns:
            PgPayRequest: The UPI Intent Pay request object.
        """
        upi_intent_instrument = PaymentInstrumentBuilder.build_upi_intent_payment_instrument(target_app=target_app)
        return PgPayRequest(merchant_transaction_id=merchant_transaction_id,
                            amount=amount,
                            merchant_order_id=merchant_order_id,
                            payment_instrument=upi_intent_instrument,
                            merchant_user_id=merchant_user_id,
                            device_context=PgDeviceContext(deviceOS=device_os),
                            redirect_url=redirect_url,
                            redirect_mode=redirect_mode,
                            callback_url=callback_url,
                            cancel_redirect_url=cancel_redirect_url,
                            auto_failure_timeout=auto_failure_timeout,
                            callback_mode=callback_mode)

    @staticmethod
    def upi_qr_pay_request_builder(merchant_transaction_id: str, amount: int, merchant_user_id: str = None,
                                   redirect_url: str = None, redirect_mode: str = None, callback_url: str = None,
                                   callback_mode: str = None, merchant_order_id: str = None,
                                   cancel_redirect_url: str = None, device_os: str = None,
                                   auto_failure_timeout: int = None):
        """
        Builds a UPI QR Pay request.

        Parameters:
            merchant_transaction_id (str): The unique transaction ID assigned by the merchant.
            amount (int): The amount of the payment. In paise, minimum 100 (1 rupee).
            merchant_user_id (str, optional): The ID assigned to the user by the merchant.
            redirect_url (str, optional): The UI URL to redirect the user after a successful payment.
            redirect_mode (str, optional): The mode of redirection after payment completion.
            callback_url (str, optional): The S2S callback URL to which status notifications will be sent.
            callback_mode (str, optional): The mode of callback handling.
            merchant_order_id (str, optional): The ID of the order assigned by the merchant.
            cancel_redirect_url (str, optional): The UI URL to redirect the user if the payment is canceled.
            device_os (str, optional): The operating system of the device used for the payment (e.g., ANDROID or IOS).
            auto_failure_timeout (int, optional): The timeout period for automatic failure handling.

        Returns:
            PgPayRequest: The UPI QR Pay request object.
        """
        upi_qr_instrument = PaymentInstrumentBuilder.build_upi_qr_payment_instrument()
        return PgPayRequest(merchant_transaction_id=merchant_transaction_id,
                            amount=amount,
                            merchant_order_id=merchant_order_id,
                            payment_instrument=upi_qr_instrument,
                            merchant_user_id=merchant_user_id,
                            device_context=PgDeviceContext(deviceOS=device_os),
                            redirect_url=redirect_url,
                            redirect_mode=redirect_mode,
                            callback_url=callback_url,
                            cancel_redirect_url=cancel_redirect_url,
                            auto_failure_timeout=auto_failure_timeout,
                            callback_mode=callback_mode)

    @staticmethod
    def saved_card_pay_request_builder(merchant_transaction_id: str, amount: int,
                                       auth_mode: str, card_id: str, encrypted_cvv: str,
                                       encryption_key_id: int,
                                       merchant_user_id: str = None,
                                       redirect_url: str = None, redirect_mode: str = None, callback_url: str = None,
                                       callback_mode: str = None, merchant_order_id: str = None,
                                       cancel_redirect_url: str = None, device_os: str = None,
                                       auto_failure_timeout: int = None):
        """
        Builds a saved card pay request.

        Parameters:
            merchant_transaction_id (str): The unique transaction ID assigned by the merchant.
            amount (int): The amount of the payment. In paise, minimum 100 (1 rupee).
            auth_mode (str): The authentication mode for saved card pay.
            card_id (str): The ID of the saved card.
            encrypted_cvv (str): The encrypted CVV of the card.
            encryption_key_id (int): The ID of the encryption key.
            merchant_user_id (str, optional): The ID assigned to the user by the merchant.
            redirect_url (str, optional): The UI URL to redirect the user after a successful payment.
            redirect_mode (str, optional): The mode of redirection after payment completion.
            callback_url (str, optional): The S2S callback URL to which status notifications will be sent.
            callback_mode (str, optional): The mode of callback handling.
            merchant_order_id (str, optional): The ID of the order assigned by the merchant.
            cancel_redirect_url (str, optional): The UI URL to redirect the user if the payment is canceled.
            device_os (str, optional): The operating system of the device used for the payment (e.g., ANDROID or IOS).
            auto_failure_timeout (int, optional): The timeout period for automatic failure handling.

        Returns:
            PgPayRequest: The saved card pay request object.
            """
        saved_card_payment_instrument = PaymentInstrumentBuilder.build_saved_card_payment_instrument(
            auth_mode=auth_mode, card_id=card_id, encrypted_cvv=encrypted_cvv, encryption_key_id=encryption_key_id)
        return PgPayRequest(merchant_transaction_id=merchant_transaction_id,
                            amount=amount,
                            merchant_order_id=merchant_order_id,
                            payment_instrument=saved_card_payment_instrument,
                            merchant_user_id=merchant_user_id,
                            device_context=PgDeviceContext(deviceOS=device_os),
                            redirect_url=redirect_url,
                            redirect_mode=redirect_mode,
                            callback_url=callback_url,
                            cancel_redirect_url=cancel_redirect_url,
                            auto_failure_timeout=auto_failure_timeout,
                            callback_mode=callback_mode)

    @staticmethod
    def card_pay_request_builder(merchant_transaction_id: str, amount: int, auth_mode: str, save_card: bool,
                                 encrypted_card_number: str, encryption_key_id: int, card_holder_name: str,
                                 expiry_month: str, expiry_year: str, encrypted_cvv: str, merchant_user_id: str = None,
                                 redirect_url: str = None, redirect_mode: str = None, callback_url: str = None,
                                 callback_mode: str = None, merchant_order_id: str = None,
                                 cancel_redirect_url: str = None, device_os: str = None,
                                 auto_failure_timeout: int = None, address_line1: str = None, address_line2: str = None,
                                 address_city: str = None, address_state: str = None, address_zip: str = None,
                                 address_country: str = None):
        """
        Builds a card pay request.

        Parameters:
            merchant_transaction_id (str): The unique transaction ID assigned by the merchant.
            amount (int): The amount of the payment. In paise, minimum 100 (1 rupee).
            auth_mode (str): The authentication mode for card pay.
            save_card (bool): Indicates whether the card should be saved for future use.
            encrypted_card_number (str): The encrypted card number.
            encryption_key_id (int): The ID of the encryption key.
            card_holder_name (str): The name of the cardholder.
            expiry_month (str): The expiry month of the card.
            expiry_year (str): The expiry year of the card.
            encrypted_cvv (str): The encrypted CVV of the card.
            merchant_user_id (str, optional): The ID assigned to the user by the merchant.
            redirect_url (str, optional): The UI URL to redirect the user after a successful payment.
            redirect_mode (str, optional): The mode of redirection after payment completion.
            callback_url (str, optional): The S2S callback URL to which status notifications will be sent.
            callback_mode (str, optional): The mode of callback handling.
            merchant_order_id (str, optional): The ID of the order assigned by the merchant.
            cancel_redirect_url (str, optional): The UI URL to redirect the user if the payment is canceled.
            device_os (str, optional): The operating system of the device used for the payment (e.g., ANDROID or IOS).
            auto_failure_timeout (int, optional): The timeout period for automatic failure handling.
            address_line1 (str, optional): The address line 1 for billing.
            address_line2 (str, optional): The address line 2 for billing.
            address_city (str, optional): The city for billing.
            address_state (str, optional): The state for billing.
            address_zip (str, optional): The ZIP code for billing.
            address_country (str, optional): The country for billing.

        Returns:
            PgPayRequest: The card pay request object.
        """

        card_payment_instrument = PaymentInstrumentBuilder.build_card_payment_instrument(auth_mode=auth_mode,
                                                                                         save_card=save_card,
                                                                                         encrypted_card_number=encrypted_card_number,
                                                                                         encryption_key_id=encryption_key_id,
                                                                                         card_holder_name=card_holder_name,
                                                                                         expiry_month=expiry_month,
                                                                                         expiry_year=expiry_year,
                                                                                         encrypted_cvv=encrypted_cvv,
                                                                                         address_line1=address_line1,
                                                                                         address_line2=address_line2,
                                                                                         address_city=address_city,
                                                                                         address_state=address_state,
                                                                                         address_zip=address_zip,
                                                                                         address_country=address_country)

        return PgPayRequest(merchant_transaction_id=merchant_transaction_id,
                            amount=amount,
                            merchant_order_id=merchant_order_id,
                            payment_instrument=card_payment_instrument,
                            merchant_user_id=merchant_user_id,
                            device_context=PgDeviceContext(deviceOS=device_os),
                            redirect_url=redirect_url,
                            redirect_mode=redirect_mode,
                            callback_url=callback_url,
                            cancel_redirect_url=cancel_redirect_url,
                            auto_failure_timeout=auto_failure_timeout,
                            callback_mode=callback_mode)

    @staticmethod
    def token_pay_request_builder(merchant_transaction_id: str, amount: int,
                                  auth_mode: str, encrypted_cvv: str, cryptogram: str, encrypted_token: str,
                                  encryption_key_id: int, expiry_month: str, expiry_year: str, pan_suffix: str,
                                  card_holder_name: str, merchant_user_id: str = None,
                                  redirect_url: str = None, redirect_mode: str = None, callback_url: str = None,
                                  callback_mode: str = None, merchant_order_id: str = None,
                                  cancel_redirect_url: str = None, device_os: str = None,
                                  auto_failure_timeout: int = None):
        """
        Builds a token pay request.

        Parameters:
            merchant_transaction_id (str): The unique transaction ID assigned by the merchant.
            amount (int): The amount of the payment. In paise, minimum 100 (1 rupee).
            auth_mode (str): The authentication mode for token pay.
            encrypted_cvv (str): The encrypted CVV of the card.
            cryptogram (str): The cryptogram value associated with the token.
            encrypted_token (str): The encrypted token value.
            encryption_key_id (int): The ID of the encryption key.
            expiry_month (str): The expiry month of the card.
            expiry_year (str): The expiry year of the card.
            pan_suffix (str): The last four digits (suffix) of the card PAN.
            card_holder_name (str): The name of the cardholder.
            merchant_user_id (str, optional): The ID assigned to the user by the merchant.
            redirect_url (str, optional): The UI URL to redirect the user after a successful payment.
            redirect_mode (str, optional): The mode of redirection after payment completion.
            callback_url (str, optional): The S2S callback URL to which status notifications will be sent.
            callback_mode (str, optional): The mode of callback handling.
            merchant_order_id (str, optional): The ID of the order assigned by the merchant.
            cancel_redirect_url (str, optional): The UI URL to redirect the user if the payment is canceled.
            device_os (str, optional): The operating system of the device used for the payment (e.g., ANDROID or IOS).
            auto_failure_timeout (int, optional): The timeout period for automatic failure handling.

        Returns:
            PgPayRequest: The token pay request object.
        """
        token_payment_instrument = PaymentInstrumentBuilder.build_token_payment_instrument(auth_mode=auth_mode,
                                                                                           encrypted_token=encrypted_token,
                                                                                           encryption_key_id=encryption_key_id,
                                                                                           expiry_month=expiry_month,
                                                                                           expiry_year=expiry_year,
                                                                                           pan_suffix=pan_suffix,
                                                                                           cryptogram=cryptogram,
                                                                                           encrypted_cvv=encrypted_cvv,
                                                                                           card_holder_name=card_holder_name)
        return PgPayRequest(merchant_transaction_id=merchant_transaction_id,
                            amount=amount,
                            merchant_order_id=merchant_order_id,
                            payment_instrument=token_payment_instrument,
                            merchant_user_id=merchant_user_id,
                            device_context=PgDeviceContext(deviceOS=device_os),
                            redirect_url=redirect_url,
                            redirect_mode=redirect_mode,
                            callback_url=callback_url,
                            cancel_redirect_url=cancel_redirect_url,
                            auto_failure_timeout=auto_failure_timeout,
                            callback_mode=callback_mode)

    @staticmethod
    def pay_page_pay_request_builder(merchant_transaction_id: str, amount: int,
                                     merchant_user_id: str = None,
                                     redirect_url: str = None, redirect_mode: str = None, callback_url: str = None,
                                     callback_mode: str = None, merchant_order_id: str = None,
                                     cancel_redirect_url: str = None, device_os: str = None,
                                     auto_failure_timeout: int = None):
        """
        Builds a pay page pay request.

        Parameters:
            merchant_transaction_id (str): The unique transaction ID assigned by the merchant.
            amount (int): The amount of the payment. In paise, minimum 100 (1 rupee).
            merchant_user_id (str, optional): The ID assigned to the user by the merchant.
            redirect_url (str, optional): The UI URL to redirect the user after a successful payment.
            redirect_mode (str, optional): The mode of redirection after payment completion.
            callback_url (str, optional): The S2S callback URL to which status notifications will be sent.
            callback_mode (str, optional): The mode of callback handling.
            merchant_order_id (str, optional): The ID of the order assigned by the merchant.
            cancel_redirect_url (str, optional): The UI URL to redirect the user if the payment is canceled.
            device_os (str, optional): The operating system of the device used for the payment (e.g., ANDROID or IOS).
            auto_failure_timeout (int, optional): The timeout period for automatic failure handling.

        Returns:
            PgPayRequest: The pay page pay request object.
        """
        return PgPayRequest(merchant_transaction_id=merchant_transaction_id,
                            amount=amount,
                            merchant_order_id=merchant_order_id,
                            payment_instrument=PaymentInstrumentBuilder.build_pay_page_payment_instrument(),
                            merchant_user_id=merchant_user_id,
                            device_context=PgDeviceContext(deviceOS=device_os),
                            redirect_url=redirect_url,
                            redirect_mode=redirect_mode,
                            callback_url=callback_url,
                            cancel_redirect_url=cancel_redirect_url,
                            auto_failure_timeout=auto_failure_timeout,
                            callback_mode=callback_mode)

    @staticmethod
    def net_banking_pay_request_builder(merchant_transaction_id: str, amount: int, bank_id: str,
                                        merchant_user_id: str = None,
                                        redirect_url: str = None, redirect_mode: str = None, callback_url: str = None,
                                        callback_mode: str = None, merchant_order_id: str = None,
                                        cancel_redirect_url: str = None, device_os: str = None,
                                        auto_failure_timeout: int = None):
        """
        Builds a net banking pay request.

        Parameters:
            merchant_transaction_id (str): The unique transaction ID assigned by the merchant.
            amount (int): The amount of the payment. In paise, minimum 100 (1 rupee).
            bank_id (str): The ID of the bank for net banking payment.
            merchant_user_id (str, optional): The ID assigned to the user by the merchant.
            redirect_url (str, optional): The UI URL to redirect the user after a successful payment.
            redirect_mode (str, optional): The mode of redirection after payment completion.
            callback_url (str, optional): The S2S callback URL to which status notifications will be sent.
            callback_mode (str, optional): The mode of callback handling.
            merchant_order_id (str, optional): The ID of the order assigned by the merchant.
            cancel_redirect_url (str, optional): The UI URL to redirect the user if the payment is canceled.
            device_os (str, optional): The operating system of the device used for the payment (e.g., ANDROID or IOS).
            auto_failure_timeout (int, optional): The timeout period for automatic failure handling.

        Returns:
            PgPayRequest: The net banking pay request object.
        """
        net_banking_instrument = PaymentInstrumentBuilder.build_net_banking_payment_instrument(bank_id=bank_id)
        return PgPayRequest(merchant_transaction_id=merchant_transaction_id,
                            amount=amount,
                            merchant_order_id=merchant_order_id,
                            payment_instrument=net_banking_instrument,
                            merchant_user_id=merchant_user_id,
                            device_context=PgDeviceContext(deviceOS=device_os),
                            redirect_url=redirect_url,
                            redirect_mode=redirect_mode,
                            callback_url=callback_url,
                            cancel_redirect_url=cancel_redirect_url,
                            auto_failure_timeout=auto_failure_timeout,
                            callback_mode=callback_mode)

