from json import JSONDecodeError

from requests import Response

from phonepe.sdk.pg.payments.models.response_v1.phonepe_response import PhonePeResponse


class PhonePeException(Exception):
    def __init__(self, status_code: int, message: str, response: Response = None):
        self.code = status_code
        self.message = message
        self.phonepe_response: PhonePeResponse = PhonePeResponse()
        if response is not None:
            try:
                self.phonepe_response = self.phonepe_response.from_dict(response.json())
            except JSONDecodeError as e:
                pass

    def __str__(self):
        message = "Failed. "
        message += f"Response status: {self.code} "
        message += f"Response message: {self.message} "
        message += f"Response data: {self.phonepe_response}"
        return message


# HTTP Request/Response related exceptions
class ConnectError(PhonePeException):
    """http error code handling"""
    pass


class ClientError(ConnectError):
    """4xx Client Error
    """
    pass


class BadRequest(ClientError):
    """400 Bad Request
    """
    pass


class UnauthorizedAccess(ClientError):
    """401 Unauthorized
    """
    pass


class ForbiddenAccess(ClientError):
    """403 Forbidden
    """
    pass


class ResourceNotFound(ClientError):
    """404 Not Found
    """
    pass


class ResourceConflict(ClientError):
    """409 Conflict
    """
    pass


class ResourceGone(ClientError):
    """410 Gone
    """
    pass


class ResourceInvalid(ClientError):
    """422 Invalid
    """
    pass


class ExpectationFailed(ClientError):
    """417 Expectation failed
    """
    pass


class ServerError(ConnectError):
    """5xx Server Error
    """
    pass

