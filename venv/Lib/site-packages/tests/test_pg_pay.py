import json
from unittest import TestCase
from unittest.mock import patch

import responses

from phonepe.sdk.pg.common.configs.config_handler import get_pg_url
from phonepe.sdk.pg.common.configs.merchant_config import MerchantConfig
from phonepe.sdk.pg.env import Env
from phonepe.sdk.pg.common.http_client_modules.api_requestor import ApiRequestor
from phonepe.sdk.pg.payments.payment_transaction_client import PaymentTransactionClient


class PayTest(TestCase):

    @responses.activate
    @patch("phonepe.sdk.pg.payments.payment_constants.PAY_API", "")
    def test_upi_open_intent_android(self):
        response_string = """{
          "success": true,
          "code": "PAYMENT_INITIATED",
          "message": "Payment Initiated",
          "data": {
            "merchantId": "MERCHANTUAT",
            "merchantTransactionId": "MT7850590068188104",
            "transactionId": null,
            "instrumentResponse": {
                    "type": "UPI_INTENT",
                    "intentUrl": "upi://pay?pa=MERCHANTUAT@ybl&pn=MerchantUAT&am=3.00&mam=3.00&tr=OD620471739210623&tn=Payment%20for%OD620471739210623&mc=5311&mode=04&purpose=00&utm_campaign=DEBIT&utm_medium=FKRT&utm_source=OD620471739210623"
            }
            }
        }"""
        merchant_id = "MERCHANTUAT"
        transaction_client = PaymentTransactionClient(api_request_maker=ApiRequestor(host_url=get_pg_url(Env.UAT)),
                                                      merchant_config=MerchantConfig(merchant_id, "salt_key", 1))

        pay_url = get_pg_url(Env.UAT)
        responses.add(responses.POST, pay_url, status=200, json=json.loads(response_string))
        response_object = transaction_client.pay({})

        assert len(responses.calls) == 1
        assert responses.assert_call_count(pay_url, 1) is True
        assert json.loads(response_string) == json.loads(response_object.to_json())

    @responses.activate
    @patch("phonepe.sdk.pg.payments.payment_constants.PAY_API", "")
    def test_upi_collect(self):
        response_string = """{
            "success": true,
            "code": "PAYMENT_INITIATED",
            "message": "Payment initiated",
            "data": {
                "merchantId": "RUMMYLEGENDSUAT",
                "merchantTransactionId": "d852fe13-a25e-4c49-82e1-27aab36b40e1",
                "transactionId": null,
                "instrumentResponse": {
                    "type": "UPI_COLLECT"
                }
            }
        }"""
        merchant_id = "MERCHANTUAT"
        transaction_client = PaymentTransactionClient(api_request_maker=ApiRequestor(host_url=get_pg_url(Env.UAT)),
                                                      merchant_config=MerchantConfig(merchant_id, "salt_key", 1))

        pay_url = get_pg_url(Env.UAT)
        responses.add(responses.POST, pay_url, status=200, json=json.loads(response_string))
        response_object = transaction_client.pay({})

        assert len(responses.calls) == 1
        assert responses.assert_call_count(pay_url, 1) is True
        assert json.loads(response_string) == json.loads(response_object.to_json())

    @responses.activate
    @patch("phonepe.sdk.pg.payments.payment_constants.PAY_API", "")
    def test_upi_qr(self):
        response_string = """{
          "success": true,
          "code": "PAYMENT_INITIATED",
          "message": "Payment Initiated",
          "data": {
            "merchantId": "MERCHANTUAT",
            "merchantTransactionId": "OD620471739210623",
            "transactionId": null,
            "instrumentResponse": {
              "type": "UPI_QR",
              "qrData": "<Base64 encoded QR image string>",
              "intentUrl": "upi://pay?pa=MERCHANTUAT@ybl&pn=MERCHANTUAT&am=100.00&mam=100.00&tr=4bf0738a-e686-464f-87f5-b249d1e56c2a&tn=Payment%20for%204bf0738a-e686-464f-87f5-b249d1e56c2a&mc=5311&mode=04&purpose=00&utm_campaign=B2B_PG&utm_medium=JUSPAYUAT&utm_source=4bf0738a-e686-464f-87f5-b249d1e56c2a"
            }
          }
        }"""
        merchant_id = "MERCHANTUAT"
        transaction_client = PaymentTransactionClient(api_request_maker=ApiRequestor(host_url=get_pg_url(Env.UAT)),
                                                      merchant_config=MerchantConfig(merchant_id, "salt_key", 1))

        pay_url = get_pg_url(Env.UAT)
        responses.add(responses.POST, pay_url, status=200, json=json.loads(response_string))
        response_object = transaction_client.pay({})

        assert len(responses.calls) == 1
        assert responses.assert_call_count(pay_url, 1) is True
        assert json.loads(response_string) == json.loads(response_object.to_json())

    @responses.activate
    @patch("phonepe.sdk.pg.payments.payment_constants.PAY_API", "")
    def test_card_flow(self):
        response_string = """{
            "success": true,
            "code": "PAYMENT_INITIATED",
            "message": "Payment initiated",
            "data": {
                "merchantId": "MERCHANTUAT",
                "merchantTransactionId": "MT7850590068188104",
                "transactionId": "T2204071334465821320730",
                "instrumentResponse": {
                    "type": "CARD",
                    "redirectInfo": {
                        "url": "https://pg-uat.phonepe.com/pg-transport/v1/redirect/dummy?id=d085d94a-8d58-4043-a73f-31e9de41af46",
                        "method": "GET"
                    }
                }
            }
        }"""
        merchant_id = "MERCHANTUAT"
        transaction_client = PaymentTransactionClient(api_request_maker=ApiRequestor(host_url=get_pg_url(Env.UAT)),
                                                      merchant_config=MerchantConfig(merchant_id, "salt_key", 1))

        pay_url = get_pg_url(Env.UAT)
        responses.add(responses.POST, pay_url, status=200, json=json.loads(response_string))
        response_object = transaction_client.pay({})

        assert len(responses.calls) == 1
        assert responses.assert_call_count(pay_url, 1) is True
        assert json.loads(response_string) == json.loads(response_object.to_json())

    @responses.activate
    @patch("phonepe.sdk.pg.payments.payment_constants.PAY_API", "")
    def test_save_card_id(self):
        response_string = """{
          "success": true,
          "code": "PAYMENT_INITIATED",
          "message": "Payment Initiated",
          "data": {
            "merchantId": "MERCHANTUAT",
            "merchantTransactionId": "MT7850590068188104",
            "transactionId": "OD620471739210623",
            "instrumentResponse": {
                "type": "SAVED_CARD",
                "redirectInfo": {
                    "url": "https://pg.phonepe.com/redirect?id=5dd821c4-4cf1-498e-86de-928901d84224",
                    "method": "GET"
                }
            }
          }
        }"""
        merchant_id = "MERCHANTUAT"
        transaction_client = PaymentTransactionClient(api_request_maker=ApiRequestor(host_url=get_pg_url(Env.UAT)),
                                                      merchant_config=MerchantConfig(merchant_id, "salt_key", 1))

        pay_url = get_pg_url(Env.UAT)
        responses.add(responses.POST, pay_url, status=200, json=json.loads(response_string))
        response_object = transaction_client.pay({})

        assert len(responses.calls) == 1
        assert responses.assert_call_count(pay_url, 1) is True
        assert json.loads(response_string) == json.loads(response_object.to_json())

    @responses.activate
    @patch("phonepe.sdk.pg.payments.payment_constants.PAY_API", "")
    def test_token(self):
        response_string = """{
          "success": true,
          "code": "PAYMENT_INITIATED",
          "message": "Payment initiated",
          "data": {
            "merchantId": "MERCHANTUAT",
                "merchantTransactionId": "MT7850590068188104",
            "transactionId": "T9693997646897938",
                "instrumentResponse": {
                "type": "TOKEN",
                    "redirectInfo": {
                        "url": "https://pg.phonepe.com/redirect?id=5dd821c4-4cf1-498e-86de-928901d84224",
                        "method": "GET"
                    }
                }
          }
        }"""
        merchant_id = "MERCHANTUAT"
        transaction_client = PaymentTransactionClient(api_request_maker=ApiRequestor(host_url=get_pg_url(Env.UAT)),
                                                      merchant_config=MerchantConfig(merchant_id, "salt_key", 1))

        pay_url = get_pg_url(Env.UAT)
        responses.add(responses.POST, pay_url, status=200, json=json.loads(response_string))
        response_object = transaction_client.pay({})

        assert len(responses.calls) == 1
        assert responses.assert_call_count(pay_url, 1) is True
        assert json.loads(response_string) == json.loads(response_object.to_json())

    @responses.activate
    @patch("phonepe.sdk.pg.payments.payment_constants.PAY_API", "")
    def test_net_banking(self):
        response_string = """{
            "success": true,
            "code": "PAYMENT_INITIATED",
            "message": "Payment initiated",
            "data":
            {
                "merchantId": "MERCHANTUAT",
                "merchantTransactionId": "MT7850590068188104",
                "transactionId": "T2208051605137945169863",
                "instrumentResponse":
                {
                    "type": "NET_BANKING",
                    "redirectInfo":
                    {
                        "url": "https://pg-uat.phonepe.com/pg-transport/v1/redirect/tib?id=670fac79-1ccc-42b4-b0b5-af36c6b6db09",
                        "method": "GET"
                    }
                }
            }
        }"""
        merchant_id = "MERCHANTUAT"
        transaction_client = PaymentTransactionClient(api_request_maker=ApiRequestor(host_url=get_pg_url(Env.UAT)),
                                                      merchant_config=MerchantConfig(merchant_id, "salt_key", 1))

        pay_url = get_pg_url(Env.UAT)
        responses.add(responses.POST, pay_url, status=200, json=json.loads(response_string))
        response_object = transaction_client.pay({})

        assert len(responses.calls) == 1
        assert responses.assert_call_count(pay_url, 1) is True
        assert json.loads(response_string) == json.loads(response_object.to_json())

    @responses.activate
    @patch("phonepe.sdk.pg.payments.payment_constants.PAY_API", "")
    def test_pay_page(self):
        response_string = """{
          "success": true,
          "code": "PAYMENT_INITIATED",
          "message": "Payment initiated",
          "data": {
            "merchantId": "MERCHANTUAT",
            "merchantTransactionId": "ec6c129e-ee3f-45a5-8ab9-57e0da05205b",
            "transactionId": null,
            "instrumentResponse": {
              "type": "PAY_PAGE",
              "redirectInfo": {
                "url": "https://www.phonepe.com/transact/pg?token=working",
                "method": "GET"
              }
            }
          }
        }"""
        merchant_id = "MERCHANTUAT"
        transaction_client = PaymentTransactionClient(api_request_maker=ApiRequestor(host_url=get_pg_url(Env.UAT)),
                                                      merchant_config=MerchantConfig(merchant_id, "salt_key", 1))

        pay_url = get_pg_url(Env.UAT)
        responses.add(responses.POST, pay_url, status=200, json=json.loads(response_string))
        response_object = transaction_client.pay({})

        assert len(responses.calls) == 1
        assert responses.assert_call_count(pay_url, 1) is True
        assert json.loads(response_string) == json.loads(response_object.to_json())
