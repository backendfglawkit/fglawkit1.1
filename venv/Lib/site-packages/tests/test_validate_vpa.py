import json
from unittest import TestCase

import responses

from phonepe.sdk.pg.common.configs.config_handler import get_pg_url
from phonepe.sdk.pg.common.configs.merchant_config import MerchantConfig
from phonepe.sdk.pg.common.exceptions import ExpectationFailed
from phonepe.sdk.pg.env import Env
from phonepe.sdk.pg.common.http_client_modules.api_requestor import ApiRequestor
from phonepe.sdk.pg.payments.models.response_v1.phonepe_response import PhonePeResponse
from phonepe.sdk.pg.payments.payment_constants import VPA_API
from phonepe.sdk.pg.payments.payment_transaction_client import PaymentTransactionClient


class TestValidateVpa(TestCase):

    @responses.activate
    def test_validate_vpa(self):
        merchant_id = "MERCHANTUAT"
        transaction_client = PaymentTransactionClient(api_request_maker=ApiRequestor(host_url=get_pg_url(Env.UAT)),
                                                      merchant_config=MerchantConfig(merchant_id, "salt_key", 1))
        response_data = """{
                "success": true,
                "code": "SUCCESS",
                "message": "Your request has been successfully completed.",
                "data": {
                    "name": "ABC",
                    "vpa": "9999999999@ybl"
                }
            }
        """
        vpa_request_url = get_pg_url(Env.UAT) + VPA_API

        responses.add(responses.POST, vpa_request_url, status=200, json=json.loads(response_data))
        response_object = transaction_client.validate_vpa(vpa_request={})

        assert len(responses.calls) == 1
        assert responses.assert_call_count(vpa_request_url, 1) is True
        assert json.loads(response_data) == json.loads(response_object.to_json())

    @responses.activate
    def test_validate_bad_vpa(self):
        transaction_client = PaymentTransactionClient(api_request_maker=ApiRequestor(host_url=get_pg_url(Env.UAT)),
                                                      merchant_config=MerchantConfig("phonepe_merchant", "salt_key", 1))
        vpa_request_url = get_pg_url(Env.UAT) + VPA_API
        responses.add(responses.POST, vpa_request_url, status=417,
                      json={'success': False, 'code': 'INVALID_VPA', 'message': 'Incorrect UPI details. Please check the UPI ID entered.', 'data': {}})
        with self.assertRaises(ExpectationFailed) as exception_raises_context:
            transaction_client.validate_vpa({})

        exception = exception_raises_context.exception
        assert exception.code == 417
        assert exception.message == "Expectation Failed"
        assert exception.phonepe_response == PhonePeResponse(success=False,
                                                             code="INVALID_VPA",
                                                             message='Incorrect UPI details. Please check the UPI ID entered.',
                                                             data={})
